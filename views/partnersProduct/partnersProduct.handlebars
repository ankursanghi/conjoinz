{{#extend "mainLayoutPartial"}}
{{#content "head" mode="append"}}
	<!-- SWIPER SLIDER -->
	<link href="assets/plugins/slider.swiper/dist/css/swiper.min.css" rel="stylesheet" type="text/css" />

{{/content}}

{{#content "loggedIn"}}
<li class="hidden-xs"><a href="/partnerlogin">PARTNER LOGOUT</a></li>
{{/content}}

{{#content "mainbody"}}
<section style="background:url('assets/images/demo/wall2.jpg')">
<div class="container">
<!-- HTML DATATABLE -->
<table class="table table-striped table-hover table-bordered" id="sample_editable_1">
	<thead>
		<tr>
			<th>Select</th>
			<th>Product Name</th>
			<th>Brand</th>
			<th>Product size</th>
			<th>List Price</th>
			<th>MSRP</th>
			<th>Promotions</th>
			<th>Edit</th>
		</tr> 
	</thead>
	<tbody>
		<tr>
			<td style="width:5%; vertical-align:middle">
			<input type="checkbox" class="checkboxes" value={{upc}} name="upc"/>
		    </td>
			<td>
	         Test
	        </td>
	        <td>
	        Test
	        </td>
	        <td>
	         Test
	        </td>
	        <td>
	         Test
	        </td>
	        <td>
	        Test
	        </td>
	        <td>
	         Test
	        </td>
	        <td>
	        <button class="editbtn"><i class="fa fa-pencil"></i></button> 
	        <!-- <button type="submit" id="editbtn"><i class="fa fa-pencil ico-light ico-rounded ico-hover"></i></button> -->
	        </td>
	    </tr>
	    <tr>
			<td style="width:5%; vertical-align:middle">
			<input type="checkbox" class="checkboxes" value={{upc}} name="upc"/>
		    </td>
			<td>
	         Test
	        </td>
	        <td>
	        Test
	        </td>
	        <td>
	         Test
	        </td>
	        <td>
	         Test
	        </td>
	        <td>
	        Test
	        </td>
	        <td>
	         Test
	        </td>
	        <td>
	        <button class="editbtn"><i class="fa fa-pencil"></i></button> 
	        <!-- <button type="submit" id="editbtn"><i class="fa fa-pencil ico-light ico-rounded ico-hover"></i></button> -->
	        </td>
	    </tr>
	    <tr>
			<td style="width:5%; vertical-align:middle">
			<input type="checkbox" class="checkboxes" value={{upc}} name="upc"/>
		    </td>
			<td>
	         Test
	        </td>
	        <td>
	        Test
	        </td>
	        <td>
	         Test
	        </td>
	        <td>
	         Test
	        </td>
	        <td>
	        Test
	        </td>
	        <td>
	         Test
	        </td>
	        <td>
	        <button class="editbtn"><i class="fa fa-pencil"></i></button> 
	        <!-- <button type="submit" id="editbtn"><i class="fa fa-pencil ico-light ico-rounded ico-hover"></i></button> -->
	        </td>
	    </tr>
     </tbody>
    </table>
    </div>
    </section>
 {{/content}}
  {{#content "scripts" mode="append"}}
<script type="text/javascript">
	loadScript(plugin_path + "datatables/js/jquery.dataTables.min.js", function(){ 
			loadScript(plugin_path + "datatables/dataTables.bootstrap.js", function(){
				loadScript(plugin_path + "select2/js/select2.full.min.js", function(){

					if (jQuery().dataTable) {

					function restoreRow(oTable, nRow) {
					var aData = oTable.fnGetData(nRow);
					var jqTds = $('>td', nRow);

					for (var i = 0, iLen = jqTds.length; i < iLen; i++) {
					oTable.fnUpdate(aData[i], nRow, i, false);
					}

					oTable.fnDraw();
					}

					function editRow(oTable, nRow) {
					var aData = oTable.fnGetData(nRow);
					var jqTds = $('>td', nRow);
					jqTds[0].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[0] + '">';
					jqTds[1].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[1] + '">';
					jqTds[2].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[2] + '">';
					jqTds[3].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[3] + '">';
					jqTds[4].innerHTML = '<a class="edit" href="">Save</a>';
					jqTds[5].innerHTML = '<a class="cancel" href="">Cancel</a>';
					}

					function saveRow(oTable, nRow) {
						var jqInputs = $('input', nRow);
						oTable.fnUpdate(jqInputs[0].value, nRow, 0, false);
						oTable.fnUpdate(jqInputs[1].value, nRow, 1, false);
						oTable.fnUpdate(jqInputs[2].value, nRow, 2, false);
						oTable.fnUpdate(jqInputs[3].value, nRow, 3, false);
						oTable.fnUpdate('<a class="edit" href="">Edit</a>', nRow, 4, false);
						oTable.fnUpdate('<a class="delete" href="">Delete</a>', nRow, 5, false);
						oTable.fnDraw();
					}

					function cancelEditRow(oTable, nRow) {
						var jqInputs = $('input', nRow);
						oTable.fnUpdate(jqInputs[0].value, nRow, 0, false);
						oTable.fnUpdate(jqInputs[1].value, nRow, 1, false);
						oTable.fnUpdate(jqInputs[2].value, nRow, 2, false);
						oTable.fnUpdate(jqInputs[3].value, nRow, 3, false);
						oTable.fnUpdate('<a class="edit" href="">Edit</a>', nRow, 4, false);
						oTable.fnDraw();
					}

					var table = $('#sample_editable_1');

					var oTable = table.dataTable({
							"lengthMenu": [
							[ -1, 5, 15, 20],
							["Records per page", 5, 15, 20] // change per page values here
							],
							// set the initial value
							"pageLength": 10,

							"language": {
							"lengthMenu": " _MENU_ ",
							"sSearch": ""
							},
							"columnDefs": [{ // set default column settings
							'orderable': true,
							'targets': [0]
							}, {
							"searchable": true,
							"targets": [0]
							}],
							"order": [
							[0, "desc"]
							] // set first column as a default sort by desc
					});

					var tableWrapper = $("#sample_editable_1_wrapper");

					tableWrapper.find(".dataTables_length select").select2({
showSearchInput: false //hide search box with special css class
}); // initialize select2 dropdown

var nEditing = null;
var nNew = false;

$('#sample_editable_1_new').click(function (e) {
		e.preventDefault();

		if (nNew && nEditing) {
		if (confirm("Previose row not saved. Do you want to save it ?")) {
		saveRow(oTable, nEditing); // save
		$(nEditing).find("td:first").html("Untitled");
		nEditing = null;
		nNew = false;

		} else {
		oTable.fnDeleteRow(nEditing); // cancel
		nEditing = null;
		nNew = false;

		return;
		}
		}

		var aiNew = oTable.fnAddData(['', '', '', '', '', '']);
		var nRow = oTable.fnGetNodes(aiNew[0]);
		editRow(oTable, nRow);
		nEditing = nRow;
		nNew = true;
});

table.on('click', '.delete', function (e) {
		e.preventDefault();

		if (confirm("Are you sure to delete this row ?") == false) {
		return;
		}

		var nRow = $(this).parents('tr')[0];
		oTable.fnDeleteRow(nRow);
		alert("Deleted! Do not forget to do some ajax to sync with backend :)");
		});

table.on('click', '.cancel', function (e) {
		e.preventDefault();

		if (nNew) {
		oTable.fnDeleteRow(nEditing);
		nNew = false;
		} else {
		restoreRow(oTable, nEditing);
		nEditing = null;
		}
		});

table.on('click', '.edit', function (e) {
		e.preventDefault();

		/* Get the row as a parent of the link that was clicked on */
		var nRow = $(this).parents('tr')[0];

		if (nEditing !== null && nEditing != nRow) {
		/* Currently editing - but not this row - restore the old before continuing to edit mode */
		restoreRow(oTable, nEditing);
		editRow(oTable, nRow);
		nEditing = nRow;
		} else if (nEditing == nRow && this.innerHTML == "Save") {
		/* Editing this row and want to save it */
		saveRow(oTable, nEditing);
		nEditing = null;
		alert("Updated! Do not forget to do some ajax to sync with backend :)");
		} else {
		/* No edit in progress - lets start one */
		editRow(oTable, nRow);
		nEditing = nRow;
		}
});

}

$('.dataTables_filter input').attr("placeholder", "Search here to find..");
});
});
});

</script>
<script>
  
   $(document).ready(function () {
          $('.editbtn').click(function () {
              var currentTD = $(this).parents('tr').eq(0).find('td');
              if ($(this).html() == '<i class="fa fa-pencil"></i>') {
                  currentTD = $(this).parents('tr').eq(0).find('td');
                  $.each(currentTD, function () {
                      $(this).prop('contenteditable', true)
                  });
              } else {
                 $.each(currentTD, function () {
                      $(this).prop('contenteditable', false)
                  });
              }
    
             $(this).html($(this).html() == '<i class="fa fa-pencil"></i>' ? '<i class="fa fa-floppy-o"></i>' : '<i class="fa fa-pencil"></i>') 
    
          });
    
      });

</script>
{{/content}}
{{/extend}}